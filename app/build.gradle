apply plugin: 'com.android.application'

android {

    signingConfigs {

        debug {
            File signingPropFile = rootProject.file('signing.properties')
            if (signingPropFile.exists()) {
                Properties signingProp = new Properties()
                signingProp.load(signingPropFile.newDataInputStream())
                storeFile file(signingProp.get("debug.storeFile"))
                storePassword signingProp.get("debug.storePassword")
                keyAlias signingProp.get("debug.keyAlias")
                keyPassword signingProp.get("debug.keyPassword")
            } else if (System.getenv('DEBUG_KEYSTORE_BASE64') != null) {
                storeFile decodeKeyStoreFileFromBase64Env('DEBUG_KEYSTORE_BASE64')
                storePassword System.getenv('DEBUG_KEYSTORE_PASSWORD')
                keyAlias System.getenv('DEBUG_KEYSTORE_KEY_ALIAS')
                keyPassword System.getenv('DEBUG_KEYSTORE_KEY_PASSWORD')
            }
        }
        release {
            File signingPropFile = rootProject.file('signing.properties')
            if (signingPropFile.exists()) {
                Properties signingProp = new Properties()
                signingProp.load(signingPropFile.newDataInputStream())
                storeFile file(signingProp.get("release.storeFile"))
                storePassword signingProp.get("release.storePassword")
                keyAlias signingProp.get("release.keyAlias")
                keyPassword signingProp.get("release.keyPassword")
            } else if (System.getenv('RELEASE_KEYSTORE_BASE64') != null) {
                storeFile decodeKeyStoreFileFromBase64Env('RELEASE_KEYSTORE_BASE64')
                storePassword System.getenv('RELEASE_KEYSTORE_PASSWORD')
                keyAlias System.getenv('RELEASE_KEYSTORE_KEY_ALIAS')
                keyPassword System.getenv('RELEASE_KEYSTORE_KEY_PASSWORD')
            }
        }
    }

    buildTypes {
        debug {
            if (rootProject.file('signing.properties').exists()
                || System.getenv('DEBUG_KEYSTORE_BASE64') != null) {
                signingConfig signingConfigs.debug
            }

            // Debug Build시에 Native Library Debugging이 가능한 APK를 생성하도록 설정합니다.
            jniDebuggable true
        }
        release {
            if (rootProject.file('signing.properties').exists()
                || System.getenv('RELEASE_KEYSTORE_BASE64') != null) {
                signingConfig signingConfigs.release
            }
        }
    }


    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "io.github.isang98.embossinganimation"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 2
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}
